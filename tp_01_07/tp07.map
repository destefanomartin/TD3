
There are no discarded input sections

Configuración de la Memoria

Nombre           Origen             Longitud           Atributos
reset_mem_rom    0x70000000         0x00001000
boot_mem_rom     0x70010000         0x00001000
application_mem_ram 0x70030000         0x00001000
data_mem_ram     0x81000000         0x00001000
bss_mem_ram      0x82000000         0x00020000
task_mem_rom     0x70040000         0x00001000
task_data_mem_rom 0x700a0000         0x00800000
task_bss_mem_rom 0x70100000         0x00002000
stack_mem_ram    0x70060000         0x00004000
readarea_mem_ram 0x70a00000         0x00020000
*default*        0x00000000         0xffffffff

Guión del enlazador y mapa de memoria

                0x70000000                        _VECTOR_RESET_INIT = 0x70000000
                0x70010000                        _BOOTLOADER_INIT_ = 0x70010000
                0x70030000                        _KERNEL_INIT = 0x70030000
                0x81000000                        _DATA_KERNEL_INIT = 0x81000000
                0x82000000                        _BSS_KERNEL_INIT = 0x82000000
                0x70040000                        _TASK_INIT = 0x70040000
                0x700a0000                        _DATA_TASK_INIT = 0x700a0000
                0x70100000                        _BSS_TASK_INIT = 0x70100000
                0x70060000                        _PUBLIC_STACK_INIT = 0x70060000
                0x70a00000                        _READAREA_INIT = 0x70a00000
                0x00001000                        TASK_STACK_SIZE = 0x1000
                0x00004000                        STACK_SIZE = 0x4000

boot            0x70010000      0x4c8
 *(boot*)
 boot           0x70010000      0x4c8 tp07.o
                0x70010000                _start

reset_vector    0x70000000       0x40 dirección de carga 0x700104c8
                0x70000000                        __reset_start__ = .
 *(reset_vector)
 reset_vector   0x70000000       0x40 tp07.o
                0x70000040                        __reset_end__ = .
                0x700104c8                        __reset_LMA = LOADADDR (reset_vector)

.text           0x70030000      0x168 dirección de carga 0x70010508
                0x70030000                        __text_start__ = .
 *(.text*)
 .text          0x70030000        0x0 task1.o
 .text          0x70030000        0x0 task2.o
 .text          0x70030000      0x168 tp07.o
                0x70030168                        __text_end__ = .
                0x70010508                        __text_LMA = LOADADDR (.text)

.glue_7         0x70030168        0x0 dirección de carga 0x70010670
 .glue_7        0x70030168        0x0 linker stubs

.glue_7t        0x70030168        0x0 dirección de carga 0x70010670
 .glue_7t       0x70030168        0x0 linker stubs

.vfp11_veneer   0x70030168        0x0 dirección de carga 0x70010670
 .vfp11_veneer  0x70030168        0x0 linker stubs

.v4_bx          0x70030168        0x0 dirección de carga 0x70010670
 .v4_bx         0x70030168        0x0 linker stubs

.iplt           0x70030168        0x0 dirección de carga 0x70010670
 .iplt          0x70030168        0x0 tp07.o

.data           0x81000000       0x10 dirección de carga 0x70010670
                0x81000000                        . = ALIGN (0x4)
                0x81000000                        __data_start__ = .
 *(.data*)
 .data          0x81000000        0x0 task1.o
 .data          0x81000000        0x0 task2.o
 .data          0x81000000       0x10 tp07.o
                0x81000000                SP0
                0x81000004                task
                0x81000010                        __data_end__ = .
                0x70010670                        __data_LMA = LOADADDR (.data)

.igot.plt       0x81000010        0x0 dirección de carga 0x70010680
 .igot.plt      0x81000010        0x0 tp07.o

.bss            0x82000000     0xc000
                0x82000000                        . = ALIGN (0x4)
                0x82000000                        __bss_start__ = .
 *(.bss*)
 .bss           0x82000000        0x0 task1.o
 .bss           0x82000000        0x0 task2.o
 .bss           0x82000000     0xc000 tp07.o
                0x8200c000                        __bss_end__ = .
                0x70060000                        . = _PUBLIC_STACK_INIT

.stack          0x70060000     0x3280
                0x70060000                        __stack_start__ = .
                0x70060080                        . = (. + 0x80)
 *fill*         0x70060000       0x80 
                0x70060080                        . = ALIGN (0x4)
                0x70060080                        __stack_irq = .
                0x70060100                        . = (. + 0x80)
 *fill*         0x70060080       0x80 
                0x70060100                        . = ALIGN (0x4)
                0x70060100                        __stack_fiq = .
                0x70060180                        . = (. + 0x80)
 *fill*         0x70060100       0x80 
                0x70060180                        . = ALIGN (0x4)
                0x70060180                        __stack_svc = .
                0x70060200                        . = (. + 0x80)
 *fill*         0x70060180       0x80 
                0x70060200                        . = ALIGN (0x4)
                0x70060200                        __stack_abt = .
                0x70060280                        . = (. + 0x80)
 *fill*         0x70060200       0x80 
                0x70060280                        . = ALIGN (0x4)
                0x70060280                        __stack_undef = .
                0x70060280                        __public_stack_start = .
                0x70061280                        . = (. + TASK_STACK_SIZE)
 *fill*         0x70060280     0x1000 
                0x70061280                        __public_stack_end = .
                0x70061280                        __stack_task1_start = .
                0x70062280                        . = (. + TASK_STACK_SIZE)
 *fill*         0x70061280     0x1000 
                0x70062280                        __stack_task1_end = .
                0x70062280                        __stack_task2_start = .
                0x70063280                        . = (. + TASK_STACK_SIZE)
 *fill*         0x70062280     0x1000 
                0x70063280                        __stack_task2_end = .
 .stack         0x70063280        0x0 tp07.o
                0x70040000                        . = _TASK_INIT

.task_text      0x70040000       0x68 dirección de carga 0x70010680
                0x70040000                        . = ALIGN (0x4)
                0x70040000                        __t1_text_start__ = .
 *(.t1_text*)
 .t1_text       0x70040000       0x3c task1.o
                0x70040000                task1
                0x7004003c                        __t1_text_end__ = .
                0x70010680                        __t1_text_LMA = (LOADADDR (.task_text) + (__t1_text_start__ - ADDR (.task_text)))
                0x7004003c                        __t2_text_start__ = .
 *(.t2_text*)
 .t2_text       0x7004003c       0x2c task2.o
                0x7004003c                task2
                0x70040068                        __t2_text_end__ = .
                0x700106bc                        __t2_text_LMA = (LOADADDR (.task_text) + (__t2_text_start__ - ADDR (.task_text)))

.rel.dyn        0x70040068        0x0 dirección de carga 0x700106e8
 .rel.iplt      0x70040068        0x0 tp07.o

.task_data      0x700a0000        0x8 dirección de carga 0x700106e8
                0x700a0000                        __data_task1_start__ = .
 *(.task1_data*)
 .task1_data    0x700a0000        0x4 task1.o
                0x700a0000                SP1
                0x700a0004                        __data_task1_end__ = .
 *(.task2_data*)
 .task2_data    0x700a0004        0x4 task2.o
                0x700a0004                SP2
                0x700a0008                        __data_task2_end__ = .
                0x700106e8                        __data_task_LMA = LOADADDR (.task_data)

.task_bss       0x70100000        0x0
                0x70100000                        __bss_task1_start__ = .
 *(.task1_bss*)
 .task1_bss     0x70100000        0x0 task1.o
 .task1_bss     0x70100000        0x0 task2.o
                0x70100000                        __bss_task1_end__ = .
                0x70100000                        __bss_task2_start__ = .
 *(.task2_bss*)
                0x70100000                        __bss_task2_end__ = .

.readarea       0x70a00000        0x0 dirección de carga 0x700106f0
                0x70a00000                        . = ALIGN (0x4)
                0x70a00000                        __readarea_start__ = .
 *(.readarea*)
                0x70a00000                        __readarea_end__ = .
LOAD task1.o
LOAD task2.o
LOAD tp07.o
OUTPUT(tp07.elf elf32-littlearm)
LOAD linker stubs

.ARM.attributes
                0x00000000       0x18
 .ARM.attributes
                0x00000000       0x14 task1.o
 .ARM.attributes
                0x00000014       0x14 task2.o
 .ARM.attributes
                0x00000028       0x18 tp07.o

.debug_line     0x00000000      0x287
 .debug_line    0x00000000       0x44 task1.o
 .debug_line    0x00000044       0x3e task2.o
 .debug_line    0x00000082      0x205 tp07.o

.debug_info     0x00000000       0x6e
 .debug_info    0x00000000       0x26 task1.o
 .debug_info    0x00000026       0x26 task2.o
 .debug_info    0x0000004c       0x22 tp07.o

.debug_abbrev   0x00000000       0x3a
 .debug_abbrev  0x00000000       0x14 task1.o
 .debug_abbrev  0x00000014       0x14 task2.o
 .debug_abbrev  0x00000028       0x12 tp07.o

.debug_aranges  0x00000000       0x70
 .debug_aranges
                0x00000000       0x20 task1.o
 .debug_aranges
                0x00000020       0x20 task2.o
 .debug_aranges
                0x00000040       0x30 tp07.o

.debug_str      0x00000000       0x4c
 .debug_str     0x00000000       0x4c task1.o
                                 0x3d (tamaño antes de la relajación)
 .debug_str     0x0000004c       0x3d task2.o
 .debug_str     0x0000004c       0x3c tp07.o

.debug_ranges   0x00000000       0x28
 .debug_ranges  0x00000000       0x28 tp07.o
